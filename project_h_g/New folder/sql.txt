
CREATE TABLE users (
    userID INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(255),
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE stores (
    storeID INT AUTO_INCREMENT PRIMARY KEY,
    storeName VARCHAR(255),
    storeAddress VARCHAR(255)
);

CREATE TABLE `products` (
  `productID` int(11) NOT NULL,
  `productName` varchar(255) DEFAULT NULL,
  `productQuantity` int(11) DEFAULT NULL,
  `shoptype` varchar(50) DEFAULT NULL,
  `storeName` varchar(255) DEFAULT NULL,
  `userID` int(11) DEFAULT NULL
)


//数据量大的情况下采用这种方式
CREATE TABLE UserPurchases (
    purchaseID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT,
    productID INT,
    shoptype VARCHAR(50),
    purchaseDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userID) REFERENCES users(userID),  -- Changed reference to users(userID)
    FOREIGN KEY (productID) REFERENCES Products(productID)
);


//or 使用join方法数据量不是很大的情况下 而不去创建UserPurchases这个数据库
CREATE TABLE UserPurchases (
    purchaseID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT,
    productID INT,
    storeID INT, -- Use storeID instead of storeName
    shoptype VARCHAR(50),
    productPrice DECIMAL(10,2), -- Add productPrice field
    purchaseDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userID) REFERENCES Users(userID),
    FOREIGN KEY (productID) REFERENCES Products(productID),
    FOREIGN KEY (storeID) REFERENCES Stores(StoreID)
);

